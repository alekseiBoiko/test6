$orange: #d2691e;
$gray: #acabab;
$red: #C9453B;
$yellow: #FFC700;
$lime: #00ff00;

$footerBg: #2694990a;

$roboto: 'Roboto', sans-serif;
$gelasio: 'Gelasio', serif;
$awesome: "Font Awesome 5 Free";
$ribey: 'Ribeye', cursive;

$redUnderline: 0 2px 0 $red;
$grayShadow: 0 0 5px rgba(0, 0, 0, 0.25);

$burgerBtnColor: white;
$burgerBtnColor_hovered: $lime;

@each $color in darkslateblue, purple, skyblue, black {
    .background_colored-#{$color} {
        background-color: $color;
    }
}

// usage: @include transition(opacity visibility);
@mixin transition (
	$properties: all,
	$duration: 0.5s,
	$method: ease,
	$delay: 0s) {
	$value: ();

    @each $property in $properties {		

        @if length($value) > 0 {
			$value: append($value, unquote(",") #{$property} $duration $method $delay);
		}

        @else {
			$value: append($value, #{$property} $duration $method $delay);
		}
	}
	transition: $value;
}

// usage: @include flex(wrap, null, center, center);
@mixin flex($wrap: unset, $direction: normal, $justify: normal, $align: normal) {
	display: flex;
	@include flex-wrap($wrap);
  	@include flex-direction($direction);
  	@include flex-justify($justify);
  	@include flex-align($align);
}
@mixin flex-direction($direction: normal) {
 flex-direction: $direction;
}
@mixin flex-align($align: normal) {
 align-items: $align;
}
@mixin flex-justify($justify: normal) {
	justify-content: $justify;
}
@mixin flex-wrap($wrap: normal) {
	flex-wrap: $wrap;
}